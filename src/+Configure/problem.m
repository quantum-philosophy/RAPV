function options = problem(varargin)
  options = Options(varargin{:});

  if ~options.has('caseName'), options = Configure.case(options); end
  caseName = options.caseName;

  %
  % System simulation
  %
  options = Configure.systemSimulation( ...
    'assetPath', File.join(File.trace, '..', 'Assets'), ...
    'tgffFilename', File.join('Assets', [ caseName, '.tgff' ]), options);

  %
  % Deterministic analysis
  %
  options = Configure.deterministicAnalysis( ...
    'processParameters', { 'Leff', 'Tox' }, ...
    'samplingInterval', 1e-3, ...
    'temperatureOptions', Options( ...
      'analysis', 'DynamicSteadyState', ...
      'modelOrderReduction', Options( ...
        'threshold', 0.95, 'limit', 0.60, 'method', 'MatchDC'), ...
      'algorithm', 'condensedEquationMultipleFixed', ...
      'iterationLimit', 2, ...
      'errorThreshold', Inf), ... a fixed number of iterations
    options);

  %
  % Stochastic analysis
  %
  options = Configure.stochasticAnalysis( ...
    'parameterOptions', Options( ...
      'transformation', 'Gaussian', ...
      'reductionThreshold', 0.95), ...
    'surrogate', 'PolynomialChaos', ...
    'surrogateOptions', Options( ...
      'order', 3, 'anisotropic', 0.25, ...
      'quadratureOptions', Options('method', 'sparse')), ...
    options);

  %
  % Reliability analysis
  %
  options = Configure.reliabilityAnalysis(options);
end
